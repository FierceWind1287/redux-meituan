{"ast":null,"code":"//编写store\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst foodsStore = createSlice({\n  name: 'foods',\n  initialState: {\n    foodsList: [],\n    activeIndex: 0,\n    cartList: []\n  },\n  reducers: {\n    setFoodsList(state, action) {\n      state.foodsList = action.payload;\n    },\n    changeActiveIndex(state, action) {\n      state.activeIndex = action.payload;\n    },\n    addCart(state, action) {\n      const items = state.cartList.find(i => i.id === action.payload.id);\n      if (items) {\n        items.count++;\n      } else {\n        state.cartList.push(action.payload);\n        //这里可以用push因为createSlice内部使用了 Immer 库，它可以自动处理不可变性\n      } //payload 可以接受不同类型的数据,对象，数字等均可\n    },\n\n    increCount(state, action) {\n      const item = state.cartList.find(i => i.id === action.payload.id);\n      item.count++;\n    },\n    decreCount(state, action) {\n      const item = state.cartList.find(i => i.id === action.payload.id);\n      if (item.count === 0) {\n        return;\n      }\n      item.count--;\n    },\n    clearCart(state, action) {}\n  }\n});\nconst {\n  setFoodsList,\n  changeActiveIndex,\n  addCart,\n  increCount,\n  decreCount\n} = foodsStore.actions;\nconst reducer = foodsStore.reducer;\nconst fetchFoodsList = () => {\n  return async dispatch => {\n    const res = await axios.get('http://localhost:3004/takeaway');\n    dispatch(setFoodsList(res.data));\n  };\n};\nexport { fetchFoodsList, changeActiveIndex, addCart, increCount, decreCount };\nexport default reducer;\n//reducer后面除了在configureStore用到之外，几乎没用了\n//后续在react中修改状态主要靠dispatch(setFoodsList()))来实现","map":{"version":3,"names":["createSlice","axios","foodsStore","name","initialState","foodsList","activeIndex","cartList","reducers","setFoodsList","state","action","payload","changeActiveIndex","addCart","items","find","i","id","count","push","increCount","item","decreCount","clearCart","actions","reducer","fetchFoodsList","dispatch","res","get","data"],"sources":["C:/Users/ljs/Desktop/front_end_practice/EasyReact/redux-meituan/src/store/modules/takeaway.js"],"sourcesContent":["//编写store\r\nimport { createSlice } from \"@reduxjs/toolkit\"\r\nimport axios from \"axios\"\r\n\r\nconst foodsStore = createSlice({\r\n  name: 'foods',\r\n  initialState: {\r\n    foodsList: [],\r\n    activeIndex: 0,\r\n    cartList: []\r\n  },\r\n  reducers: {\r\n    setFoodsList(state, action) {\r\n      state.foodsList = action.payload\r\n    },\r\n    changeActiveIndex(state, action) {\r\n      state.activeIndex = action.payload\r\n    },\r\n    addCart(state, action) {\r\n      const items = state.cartList.find(i => i.id === action.payload.id)\r\n      if (items) {\r\n        items.count++\r\n      }\r\n      else {\r\n        state.cartList.push(action.payload)\r\n        //这里可以用push因为createSlice内部使用了 Immer 库，它可以自动处理不可变性\r\n      }//payload 可以接受不同类型的数据,对象，数字等均可\r\n    },\r\n    increCount(state, action) {\r\n      const item = state.cartList.find(i => i.id === action.payload.id)\r\n      item.count++\r\n    },\r\n    decreCount(state, action) {\r\n      const item = state.cartList.find(i => i.id === action.payload.id)\r\n      if(item.count===0){\r\n        return\r\n      }\r\n      item.count--\r\n    },\r\n    clearCart(state,action){\r\n      \r\n    }\r\n  }\r\n})\r\n\r\nconst { setFoodsList, changeActiveIndex, addCart, increCount, decreCount } = foodsStore.actions\r\nconst reducer = foodsStore.reducer\r\n\r\nconst fetchFoodsList = () => {\r\n  return async (dispatch) => {\r\n    const res = await axios.get('http://localhost:3004/takeaway')\r\n    dispatch(setFoodsList(res.data))\r\n  }\r\n}\r\n\r\nexport { fetchFoodsList, changeActiveIndex, addCart, increCount, decreCount }\r\nexport default reducer\r\n//reducer后面除了在configureStore用到之外，几乎没用了\r\n//后续在react中修改状态主要靠dispatch(setFoodsList()))来实现"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAY,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,iBAAiB,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC/BD,KAAK,CAACJ,WAAW,GAAGK,MAAM,CAACC,OAAO;IACpC,CAAC;IACDE,OAAO,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMI,KAAK,GAAGL,KAAK,CAACH,QAAQ,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,CAACM,EAAE,CAAC;MAClE,IAAIH,KAAK,EAAE;QACTA,KAAK,CAACI,KAAK,EAAE;MACf,CAAC,MACI;QACHT,KAAK,CAACH,QAAQ,CAACa,IAAI,CAACT,MAAM,CAACC,OAAO,CAAC;QACnC;MACF,CAAC;IACH,CAAC;;IACDS,UAAU,CAACX,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMW,IAAI,GAAGZ,KAAK,CAACH,QAAQ,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,CAACM,EAAE,CAAC;MACjEI,IAAI,CAACH,KAAK,EAAE;IACd,CAAC;IACDI,UAAU,CAACb,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMW,IAAI,GAAGZ,KAAK,CAACH,QAAQ,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,CAACM,EAAE,CAAC;MACjE,IAAGI,IAAI,CAACH,KAAK,KAAG,CAAC,EAAC;QAChB;MACF;MACAG,IAAI,CAACH,KAAK,EAAE;IACd,CAAC;IACDK,SAAS,CAACd,KAAK,EAACC,MAAM,EAAC,CAEvB;EACF;AACF,CAAC,CAAC;AAEF,MAAM;EAAEF,YAAY;EAAEI,iBAAiB;EAAEC,OAAO;EAAEO,UAAU;EAAEE;AAAW,CAAC,GAAGrB,UAAU,CAACuB,OAAO;AAC/F,MAAMC,OAAO,GAAGxB,UAAU,CAACwB,OAAO;AAElC,MAAMC,cAAc,GAAG,MAAM;EAC3B,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,GAAG,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,gCAAgC,CAAC;IAC7DF,QAAQ,CAACnB,YAAY,CAACoB,GAAG,CAACE,IAAI,CAAC,CAAC;EAClC,CAAC;AACH,CAAC;AAED,SAASJ,cAAc,EAAEd,iBAAiB,EAAEC,OAAO,EAAEO,UAAU,EAAEE,UAAU;AAC3E,eAAeG,OAAO;AACtB;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}